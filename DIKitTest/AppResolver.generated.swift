//
//  Resolver.swift
//  Generated by dikitgen.
//

import DIKit
import Foundation
import UIKit

extension AppResolverProtocol {

    func resolveController() -> Controller {
        let viewModelProtocol = resolveViewModelProtocol()
        return Controller(dependency: .init(viewModel: viewModelProtocol))
    }

    func resolveMockViewModel() -> MockViewModel {
        let modelProtocol = resolveModelProtocol()
        return MockViewModel(dependency: .init(model: modelProtocol))
    }

    func resolveModelProtocol() -> ModelProtocol {
        return provideModel()
    }

    func resolveViewModel() -> ViewModel {
        let modelProtocol = resolveModelProtocol()
        return ViewModel(dependency: .init(model: modelProtocol))
    }

    func resolveViewModelProtocol() -> ViewModelProtocol {
        return provideViewModel()
    }

}

